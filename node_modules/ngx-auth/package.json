{
  "_from": "ngx-auth",
  "_id": "ngx-auth@3.0.0",
  "_inBundle": false,
  "_integrity": "sha1-Nspk7dE0NkAz6uBaOd/8Q4FWrp0=",
  "_location": "/ngx-auth",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "ngx-auth",
    "fetchSpec": "latest",
    "name": "ngx-auth",
    "raw": "ngx-auth",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ngx-auth/-/ngx-auth-3.0.0.tgz",
  "_shasum": "36ca64edd134364033eae05a39dffc438156ae9d",
  "_spec": "ngx-auth",
  "_where": "/home/baangaritar/IS2_Bouele/IS2_Bouele_FE/src/app",
  "author": {
    "name": "Serhii Sol"
  },
  "bugs": {
    "url": "https://github.com/serhiisol/ngx-auth/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Angular 5+ Authentication module",
  "devDependencies": {
    "@angular/cli": "1.5.0",
    "@angular/common": ">=5.0.1",
    "@angular/compiler": ">=5.0.1",
    "@angular/compiler-cli": ">=5.0.1",
    "@angular/core": ">=5.0.1",
    "@angular/language-service": ">=5.0.1",
    "@angular/platform-browser": ">=5.0.1",
    "@angular/platform-browser-dynamic": ">=5.0.1",
    "@angular/router": ">=5.0.1",
    "@types/jasmine": "2.5.53",
    "@types/node": "8.0.17",
    "awesome-typescript-loader": "3.2.2",
    "jasmine-core": "2.7.0",
    "karma": "1.7.0",
    "karma-jasmine": "1.1.0",
    "karma-phantomjs-launcher": "1.0.4",
    "karma-sourcemap-loader": "0.3.7",
    "karma-spec-reporter": "0.0.31",
    "karma-webpack": "2.0.4",
    "ng-packagr": "1.6.0-rc.0",
    "reflect-metadata": "0.1.10",
    "tslint": "5.5.0",
    "typescript": "2.4.2",
    "webpack": "3.4.1",
    "webpack-dev-server": "2.6.1",
    "zone.js": ">=0.8.16"
  },
  "es2015": "ngx-auth.js",
  "homepage": "https://github.com/serhiisol/ngx-auth#readme",
  "keywords": [
    "angular2",
    "angular4",
    "authentication",
    "components",
    "typescript"
  ],
  "license": "MIT",
  "main": "bundles/ngx-auth.umd.js",
  "metadata": "ngx-auth.metadata.json",
  "module": "ngx-auth.es5.js",
  "name": "ngx-auth",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/common": ">=5.0.1",
    "@angular/core": ">=5.0.1",
    "@angular/router": ">=5.0.1",
    "rxjs": ">=5.4.2"
  },
  "readme": "# Angular 5+ Authentication\n\nThis package provides authentication module with interceptor\n\n> Package is given in completely 100% pure TypeScript.\n\n```\nnpm install ngx-auth --save\n```\n\nNote: If you want to use library for angular 4, use version 2.2.0\n```\nnpm install ngx-auth@2.2.0 --save\n```\n\n## Full example\nFull example you can find in this repo [serhiisol/ngx-auth-example](https://github.com/serhiisol/ngx-auth-example)\n\n## Authentication module\n\nAuthentication modules provides ability to attach authentication token automatically to the headers\n(through http interceptors), refresh token functionality, guards for protected or public pages and more.\n\n#### Usage\n\n1. Import ```AuthService``` interface to implement it with your custom Authentication service, e.g.:\n\n```typescript\nimport { AuthService } from 'ngx-auth';\n\n@Injectable()\nexport class AuthenticationService implements AuthService {\n\n  constructor(private http: Http) {}\n\n  public isAuthorized(): Observable<boolean> {\n    const isAuthorized: boolean = !!localStorage.getItem('accessToken');\n\n    return Observable.of(isAuthorized);\n  }\n\n  public getAccessToken(): Observable<string> {\n    const accessToken: string = localStorage.getItem('accessToken');\n\n    return Observable.of(accessToken);\n  }\n\n  public refreshToken(): Observable<any> {\n    const refreshToken: string = localStorage.getItem('refreshToken');\n\n    return this.http\n      .post('http://localhost:3001/refresh-token', { refreshToken })\n      .catch(() => this.logout())\n  }\n\n  public refreshShouldHappen(response: HttpErrorResponse): boolean {\n    return response.status === 401;\n  }\n\n  public verifyTokenRequest(url: string): boolean {\n    return url.endsWith('refresh-token');\n  }\n\n}\n```\n\n2. Specify ```PublicGuard``` for public routes and ```ProtectedGuard``` for protected respectively, e.g.:\n\n```typescript\nconst publicRoutes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    canActivate: [ PublicGuard ]\n  }\n];\n```\n```typescript\nconst protectedRoutes: Routes = [\n  {\n    path: '',\n    component: ProtectedComponent,\n    canActivate: [ ProtectedGuard ],\n    children: [\n      { path: 'dashboard', loadChildren: './dashboard/dashboard.module#DashboardModule' }\n    ]\n  }\n];\n```\n\n2. Create additional ```AuthenticationModule``` and provide important providers and imports, e.g.:\n\n```typescript\nimport { NgModule } from '@angular/core';\nimport { AuthModule, AUTH_SERVICE, PUBLIC_FALLBACK_PAGE_URI, PROTECTED_FALLBACK_PAGE_URI } from 'ngx-auth';\n\nimport { AuthenticationService } from './authentication.service';\n\n@NgModule({\n    imports: [ AuthModule ],\n    providers: [\n      { provide: PROTECTED_FALLBACK_PAGE_URI, useValue: '/' },\n      { provide: PUBLIC_FALLBACK_PAGE_URI, useValue: '/login' },\n      { provide: AUTH_SERVICE, useClass: AuthenticationService }\n    ]\n})\nexport class AuthenticationModule {\n\n}\n\n```\n\nwhere,\n* ```PROTECTED_FALLBACK_PAGE_URI``` - main protected page to be redirected to, in case if user will reach public route, that is protected\nby ```PublicGuard``` and will be authenticated\n\n* ```PUBLIC_FALLBACK_PAGE_URI``` - main public page to be redirected to, in case if user will reach protected route, that is protected\nby ```ProtectedGuard``` and won't be authenticated\n\n* ```AUTH_SERVICE``` - Authentication service token providers\n\n3. Provide your ```AuthenticationModule``` in your ```AppModule```\n\n### Customizing authentication headers\n\nBy default, requests are intercepted and a ```{ Authorization: 'Bearer ${token}'}``` header is injected. To customize this behavior, implement the ```getHeaders``` method on your ```AuthenticationService```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/serhiisol/ngx-auth.git"
  },
  "scripts": {
    "build": "ng-packagr -p ng-package.json",
    "lint": "tslint --project tsconfig.json",
    "test": "karma start karma.conf.js"
  },
  "typings": "ngx-auth.d.ts",
  "version": "3.0.0"
}
